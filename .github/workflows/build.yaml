name: Build and Update Data

on:
  schedule:
    # Run weekly on Sundays at 2 AM UTC to keep data fresh
    - cron: '0 2 * * 0'
  workflow_dispatch: # Allow manual triggering
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Compile TypeScript
      run: npm run compile
      
    - name: Run linter
      run: npm run lint:check
      
    - name: Setup virtual display for VS Code tests
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb
        
    - name: Run tests
      run: xvfb-run -a npm test
      
    - name: Package extension
      run: npm run package

  update-data-on-main:
    runs-on: ubuntu-latest
    needs: build
    # Update data when pushing to main (merges) OR on schedule/manual trigger
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Download latest MITRE ATT&CK Enterprise data
      run: |
        echo "📥 Downloading latest MITRE ATT&CK Enterprise data..."
        curl -fsSL -o data/mitre-v16.json https://raw.githubusercontent.com/mitre/cti/master/enterprise-attack/enterprise-attack.json
        echo "✅ Enterprise ATT&CK downloaded ($(du -h data/mitre-v16.json | cut -f1))"
        
    - name: Download latest MITRE ATT&CK Mobile data
      run: |
        echo "📱 Downloading latest MITRE ATT&CK Mobile data..."
        curl -fsSL -o data/mitre-mobile.json https://raw.githubusercontent.com/mitre/cti/master/mobile-attack/mobile-attack.json
        echo "✅ Mobile ATT&CK downloaded ($(du -h data/mitre-mobile.json | cut -f1))"
        
    - name: Download latest MITRE ATT&CK ICS data
      run: |
        echo "🏭 Downloading latest MITRE ATT&CK ICS data..."
        curl -fsSL -o data/mitre-ics.json https://raw.githubusercontent.com/mitre/cti/master/ics-attack/ics-attack.json
        echo "✅ ICS ATT&CK downloaded ($(du -h data/mitre-ics.json | cut -f1))"
        
    - name: Extract latest Sentinel connector data
      shell: pwsh
      run: |
        echo "🔌 Extracting Azure Sentinel connector data..."
        Set-Location scripts
        ./Extract-SentinelConnectors.ps1 -OutputPath "../data/connectors.json"
        Set-Location ..
        if (Test-Path "data/connectors.json") {
            $connectorData = Get-Content "data/connectors.json" | ConvertFrom-Json
            Write-Host "✅ Connector data extracted successfully"
            Write-Host "📊 Total connectors: $($connectorData.metadata.totalConnectors)"
            Write-Host "📊 Total tables: $($connectorData.metadata.totalTables)"
        }

    - name: Validate downloaded data
      run: |
        echo "🔍 Validating downloaded data files..."
        
        # Check MITRE files
        for file in data/mitre-*.json; do
          if [[ -f "$file" ]]; then
            if jq empty "$file" 2>/dev/null; then
              echo "✅ $file is valid JSON"
              echo "📊 $(basename $file): $(jq '.objects | length' "$file") objects"
            else
              echo "❌ $file is invalid JSON"
              exit 1
            fi
          else
            echo "❌ $file not found"
            exit 1
          fi
        done
        
        # Check connector file
        if [[ -f "data/connectors.json" ]]; then
          if jq empty "data/connectors.json" 2>/dev/null; then
            echo "✅ data/connectors.json is valid JSON"
          else
            echo "❌ data/connectors.json is invalid JSON"
            exit 1
          fi
        else
          echo "❌ data/connectors.json not found"
          exit 1
        fi

    - name: Check for data changes
      id: changes
      run: |
        git diff --quiet data/ || echo "changes=true" >> $GITHUB_OUTPUT

    - name: Commit updated data directly to main
      if: steps.changes.outputs.changes == 'true' && (github.event_name == 'push' && github.ref == 'refs/heads/main')
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add data/
        git commit -m "chore: update MITRE ATT&CK and Sentinel connector data

        Auto-generated data update including:
        - MITRE Enterprise, Mobile, and ICS ATT&CK frameworks  
        - Azure Sentinel connector data from Content Hub

        Updated after merge to main to ensure latest threat intelligence data."
        git push
        
    - name: Create Pull Request with updated data (scheduled/manual runs)
      if: steps.changes.outputs.changes == 'true' && (github.event_name == 'schedule' || github.event_name == 'workflow_dispatch')
      uses: peter-evans/create-pull-request@v7
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: |
          chore: update MITRE ATT&CK and Sentinel connector data
          
          Auto-generated data update including:
          - MITRE Enterprise, Mobile, and ICS ATT&CK frameworks
          - Azure Sentinel connector data from Content Hub
        title: "chore: Update MITRE and Sentinel data files"
        body: |
          ## Automated Data Update
          
          This PR contains updated data files:
          
          ### MITRE ATT&CK Framework
          - ✅ Enterprise ATT&CK (mitre-v16.json)
          - ✅ Mobile ATT&CK (mitre-mobile.json)  
          - ✅ ICS ATT&CK (mitre-ics.json)
          
          ### Azure Sentinel Connectors
          - ✅ Content Hub connector data (connectors.json)
          
          These files are automatically generated from official sources and provide the latest threat intelligence and connector information for the extension.
          
          **Auto-generated by GitHub Actions**
        branch: update-data-files
        delete-branch: true